diff --cc ios/RNVisitableView.swift
index ecaeb9f,b49a69a..0000000
--- a/ios/RNVisitableView.swift
+++ b/ios/RNVisitableView.swift
@@@ -28,6 -32,8 +28,11 @@@ class RNVisitableView: UIView 
      }
    }
    
+ <<<<<<< Updated upstream
+ =======
++<<<<<<< Updated upstream
++=======
++>>>>>>> Stashed changes
    func setupViewController(url: URL) {
      self.controller = RNVisitableViewController(url: url)
      self.reactViewController().addChild(self.controller!)
@@@ -35,11 -41,15 +40,23 @@@
      self.controller?.delegate = self
    }
    
++<<<<<<< Updated upstream
 +  @objc func callVisitPropsosalCallback(proposal: String) {
 +    let event = ["url": proposal]
 +    
 +    print("Handle a visit callback called:", event)
 +
++=======
+   @objc
+   func callVisitPropsosalCallback(url: String, action: String) {
+     let event: [AnyHashable: Any] = [
+       "url": url,
+       "action": action,
+     ]
+     
+     print("Handle a visit callback called:", event)
+     
++>>>>>>> Stashed changes
      onVisitProposal!(event)
    }
    
@@@ -52,9 -62,9 +69,15 @@@ extension RNVisitableView: SessionDeleg
    }
  
    func session(_ session: Session, didProposeVisit proposal: VisitProposal) {
++<<<<<<< Updated upstream
 +      // Handle a visit proposal
 +      print("Handle a visit proposal proposal:", proposal)
 +      callVisitPropsosalCallback(proposal: proposal.url.absoluteString)
++=======
+     // Handle a visit proposal
+     print("Handle a visit proposal proposal:", proposal)
+     callVisitPropsosalCallback(url: proposal.url.absoluteString, action: proposal.options.action.rawValue)
++>>>>>>> Stashed changes
    }
  
    func session(_ session: Session, didFailRequestForVisitable visitable: Visitable, error: Error) {
@@@ -66,5 -76,6 +89,9 @@@
        // Handle non-Turbo links
    }
    
++<<<<<<< Updated upstream
++=======
++>>>>>>> Stashed changes
+ >>>>>>> Stashed changes
  }
  
diff --cc src/TurboScreen.tsx
index 32a7f9c,f5e9046..0000000
--- a/src/TurboScreen.tsx
+++ b/src/TurboScreen.tsx
@@@ -1,32 -1,64 +1,88 @@@
  import React from 'react';
+ <<<<<<< Updated upstream
 +import {StyleSheet, SafeAreaView} from 'react-native';
++=======
++<<<<<<< Updated upstream
+ import {StyleSheet, SafeAreaView, Button} from 'react-native';
++>>>>>>> Stashed changes
  import VisitableView from './VisitableView';
+ =======
+ import {StyleSheet, View, Alert} from 'react-native';
+ import VisitableView, {VisitProposal} from './VisitableView';
+ >>>>>>> Stashed changes
  
 +const INITIAL_URL = 'https://turbo-native-demo.glitch.me';
 +
  interface Props {
    navigation: any;
 -  route;
 +  route: any;
  }
  
  const TurboScreen: React.FC<Props> = ({navigation, route}) => {
++<<<<<<< Updated upstream
 +  const currentUrl = route?.params?.url || INITIAL_URL;
 +
 +  const openNewPage = (url: string) => {
 +    navigation.push('TurboScreen', {
 +      url,
 +    });
 +  };
 +
 +  return (
 +    <SafeAreaView style={styles.container}>
 +      <VisitableView
 +        url={currentUrl}
 +        onVisitProposal={({nativeEvent: {url}}) => {
 +          openNewPage(url);
 +        }}
++=======
+ <<<<<<< Updated upstream
+   const url = route?.params?.url;
+ 
+   return (
+     <SafeAreaView style={styles.container}>
+       <VisitableView url={url || 'https://turbo-native-demo.glitch.me'} />
+       <Button
+         onPress={() =>
+           navigation.push('TurboScreen', {
+             url: 'https://turbo-native-demo.glitch.me/one',
+           })
+         }
+         title="Open new screen"
+ =======
+   const currentUrl = route?.params?.url || INITIAL_URL;
+ 
+   const openNewPage = (proposal: VisitProposal) => {
+     switch (proposal.action) {
+       case 'advance': {
+         navigation.push('TurboScreen', {
+           url: proposal.url,
+         });
+         break;
+       }
+       case 'replace': {
+         navigation.replace('TurboScreen', {
+           url: proposal.url,
+         });
+         break;
+       }
+       default: {
+         Alert.alert('Unsupported action type', proposal.action);
+       }
+     }
+   };
+ 
+   return (
+     <View style={styles.container}>
+       <VisitableView
+         url={currentUrl}
+         onVisitProposal={({nativeEvent}) => {
+           openNewPage(nativeEvent);
+         }}
++>>>>>>> Stashed changes
+ >>>>>>> Stashed changes
        />
-     </SafeAreaView>
+     </View>
    );
  };
  
diff --cc src/VisitableView.tsx
index 3d7cd06,dc6181f..0000000
--- a/src/VisitableView.tsx
+++ b/src/VisitableView.tsx
@@@ -1,14 -1,18 +1,25 @@@
  import React from 'react';
 -import {StyleSheet} from 'react-native';
 +import {NativeSyntheticEvent, StyleSheet} from 'react-native';
  import VisitableViewNativeComponent from './VisitableViewNativeComponent';
  
++<<<<<<< Updated upstream
 +interface VisitProposal {
 +  url: string;
 +}
 +
++=======
+ <<<<<<< Updated upstream
+ =======
+ export interface VisitProposal {
+   url: string;
+   action: 'advance' | 'replace' | 'restore';
+ }
+ 
++>>>>>>> Stashed changes
+ >>>>>>> Stashed changes
  interface Props {
    url: string;
 -  onProposeVisit: (url: string) => {};
 +  onVisitProposal: (proposal: NativeSyntheticEvent<VisitProposal>) => void;
  }
  
  const VisitableView: React.FC<Props> = props => {
